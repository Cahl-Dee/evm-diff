import { Predeploy } from '@/types';

// https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md
export const predeploys: Predeploy[] = [
  {
    address: '0x4200000000000000000000000000000000000000',
    name: 'LegacyMessagePasser',
    description: 'Stores commitments to withdrawal transactions before the Bedrock upgrade.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: true,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000002',
    name: 'DeployerWhitelist',
    description:
      'Defined a list of accounts that were allowed to deploy contracts during the initial phases of Optimism.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: true,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0xDeadDeAddeAddEAddeadDEaDDEAdDeaDDeAD0000',
    name: 'LegacyERC20ETH',
    description: 'Represents all Ether in the system before Bedrock.',
    abi: [
      'constructor()',
      'event Approval(address indexed owner, address indexed spender, uint256 value)',
      'event Burn(address indexed account, uint256 amount)',
      'event Mint(address indexed account, uint256 amount)',
      'event Transfer(address indexed from, address indexed to, uint256 value)',
      'function BRIDGE() view returns (address)',
      'function REMOTE_TOKEN() view returns (address)',
      'function allowance(address owner, address spender) view returns (uint256)',
      'function approve(address, uint256) returns (bool)',
      'function balanceOf(address _who) view returns (uint256)',
      'function bridge() view returns (address)',
      'function burn(address, uint256)',
      'function decimals() view returns (uint8)',
      'function decreaseAllowance(address, uint256) returns (bool)',
      'function increaseAllowance(address, uint256) returns (bool)',
      'function l1Token() view returns (address)',
      'function l2Bridge() view returns (address)',
      'function mint(address, uint256)',
      'function name() view returns (string)',
      'function remoteToken() view returns (address)',
      'function supportsInterface(bytes4 _interfaceId) pure returns (bool)',
      'function symbol() view returns (string)',
      'function totalSupply() view returns (uint256)',
      'function transfer(address, uint256) returns (bool)',
      'function transferFrom(address, address, uint256) returns (bool)',
    ],
    deprecated: true,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000006',
    name: 'WETH9',
    description: "Wrapped Ether contract, behaves identically to mainnet's canonical WETH.",
    abi: [
      'event Approval(address indexed src, address indexed guy, uint256 wad)',
      'event Deposit(address indexed dst, uint256 wad)',
      'event Transfer(address indexed src, address indexed dst, uint256 wad)',
      'event Withdrawal(address indexed src, uint256 wad)',
      'fallback()',
      'function allowance(address, address) view returns (uint256)',
      'function approve(address guy, uint256 wad) returns (bool)',
      'function balanceOf(address) view returns (uint256)',
      'function decimals() view returns (uint8)',
      'function deposit() payable',
      'function name() view returns (string)',
      'function symbol() view returns (string)',
      'function totalSupply() view returns (uint256)',
      'function transfer(address dst, uint256 wad) returns (bool)',
      'function transferFrom(address src, address dst, uint256 wad) returns (bool)',
      'function withdraw(uint256 wad)',
    ],
    deprecated: false,
    references: [
      'https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md',
      'https://help.optimism.io/hc/en-us/articles/4417948883611-What-is-ETH-WETH-How-do-they-interact-',
    ],
  },
  {
    address: '0x4200000000000000000000000000000000000007',
    name: 'L2CrossDomainMessenger',
    description:
      'Provides a higher level API for sending cross-domain messages, compared to directly calling L2ToL1MessagePasser.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000010',
    name: 'L2StandardBridge',
    description:
      'Higher level API built on top of the L2CrossDomainMessenger that gives a standard interface for sending ETH or ERC20 tokens across domains.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000011',
    name: 'SequencerFeeVault',
    description:
      'Accumulates any transaction priority fees and is the value of block.coinbase. When enough fees accumulate in this account, they can be withdrawn to an immutable L1 address.',
    abi: [
      'constructor(address _l1FeeWallet)',
      'function MIN_WITHDRAWAL_AMOUNT() view returns (uint256)',
      'function l1FeeWallet() view returns (address)',
      'function withdraw()',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000012',
    name: 'OptimismMintableERC20Factory',
    description:
      'Responsible for creating ERC20 contracts on L2 that can be used for depositing native L1 tokens into.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000013',
    name: 'L1BlockNumber',
    description: 'Returns the last known L1 block number.',
    abi: [],
    deprecated: true,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x420000000000000000000000000000000000000F',
    name: 'GasPriceOracle',
    description: 'Provides an API to return the L1 portion of the fee for a transaction.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000042',
    name: 'GovernanceToken',
    description: 'The Optimism (OP) token contract.',
    abi: [
      'constructor()',
      'event Approval(address indexed owner, address indexed spender, uint256 value)',
      'event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)',
      'event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)',
      'event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)',
      'event Transfer(address indexed from, address indexed to, uint256 value)',
      'function DOMAIN_SEPARATOR() view returns (bytes32)',
      'function allowance(address owner, address spender) view returns (uint256)',
      'function approve(address spender, uint256 amount) returns (bool)',
      'function balanceOf(address account) view returns (uint256)',
      'function burn(uint256 amount)',
      'function burnFrom(address account, uint256 amount)',
      'function checkpoints(address account, uint32 pos) view returns ((uint32 fromBlock, uint224 votes))',
      'function decimals() view returns (uint8)',
      'function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)',
      'function delegate(address delegatee)',
      'function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)',
      'function delegates(address account) view returns (address)',
      'function getPastTotalSupply(uint256 blockNumber) view returns (uint256)',
      'function getPastVotes(address account, uint256 blockNumber) view returns (uint256)',
      'function getVotes(address account) view returns (uint256)',
      'function increaseAllowance(address spender, uint256 addedValue) returns (bool)',
      'function mint(address _account, uint256 _amount)',
      'function name() view returns (string)',
      'function nonces(address owner) view returns (uint256)',
      'function numCheckpoints(address account) view returns (uint32)',
      'function owner() view returns (address)',
      'function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)',
      'function renounceOwnership()',
      'function symbol() view returns (string)',
      'function totalSupply() view returns (uint256)',
      'function transfer(address to, uint256 amount) returns (bool)',
      'function transferFrom(address from, address to, uint256 amount) returns (bool)',
      'function transferOwnership(address newOwner)',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000015',
    name: 'L1Block',
    description: 'Allows for L1 state to be accessed in L2.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000016',
    name: 'L2ToL1MessagePasser',
    description: 'Stores commitments to withdrawal transactions.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000014',
    name: 'L2ERC721Bridge',
    description:
      'Works together with the L1 ERC721 bridge to enable transfers of ERC721 tokens from Ethereum to Optimism.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000017',
    name: 'OptimismMintableERC721Factory',
    description:
      'Responsible for creating ERC721 contracts on L2 that can be used for depositing native L1 NFTs into.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000018',
    name: 'ProxyAdmin',
    description: 'The owner of all of the proxy contracts set at the predeploys.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x4200000000000000000000000000000000000019',
    name: 'BaseFeeVault',
    description:
      'Receives the base fees on L2, since the basefee is not burnt on L2 like it is on L1.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
  {
    address: '0x420000000000000000000000000000000000001a',
    name: 'L1FeeVault',
    description:
      'Receives the L1 portion of the transaction fees. Once the contract has received a certain amount of fees, the ETH can be withdrawn to an immutable address on L1.',
    abi: [
      'constructor(address _admin)',
      'event AdminChanged(address previousAdmin, address newAdmin)',
      'event Upgraded(address indexed implementation)',
      'fallback()',
      'function admin() returns (address)',
      'function changeAdmin(address _admin)',
      'function implementation() returns (address)',
      'function upgradeTo(address _implementation)',
      'function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)',
      'receive() external payable',
    ],
    deprecated: false,
    references: ['https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md'],
  },
];
